# DCFlight VDOM System - TODO Items

## Error Handling Improvements
- Native errors don't consistently propagate to Dart error boundaries
- Need to create a bridge between iOS error handling and the ErrorBoundary system in Dart
- Consider adding a dedicated error channel or method for passing native errors to Dart

## Component Registration Synchronization
- Components must be registered separately on iOS (DCFComponentRegistry) and Dart (ComponentRegistry)
- No automated verification that components registered on both sides are compatible
- Need to implement a validation system to ensure consistency

## Layout Calculation Timing
- Layout calculation might not always run at the optimal time after major updates
- Consider adding synchronization points to ensure layout calculation occurs when all view operations have completed
- Add callbacks to signal when batch operations are fully applied

## View Reference Management
- View reference tracking between DCMauiBridgeImpl.swift and vdom.dart could get out of sync
- Need proper cleanup mechanisms for both platforms
- The detached view caching in vdom.dart needs a corresponding cleanup on iOS

## Event Routing Improvements
- Event naming conventions may differ between native and Dart sides
- Current event matching system may miss events due to naming differences
- Standardize event naming or add a mapping system between platforms

## Performance Monitoring Extensions
- The PerformanceMonitor class could be extended to track native-side operations
- Add telemetry for cross-platform operations to identify bottlenecks

## View Caching Logic Consistency
- Ensure detached view caching is properly synchronized with the native side
- Add timeout or LRU mechanisms to prevent memory issues with cached views

## Type Safety Improvements
- Add stronger type checking between Dart props and Swift/Objective-C props
- Implement validation for component props to catch type errors earlier

## Testing Infrastructure
- Need automated tests for the cross-platform component lifecycle
- Create tests for error conditions and boundary cases
